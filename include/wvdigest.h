/*
 * Worldvisions Tunnel Vision Software:
 *   Copyright (C) 1997-2002 Net Integration Technologies, Inc.
 * 
 * MD5, SHA-1 and HMAC digest abstractions.
 *
 * Message digest encoders have the following semantics:
 *   Input data to the encoder is collected and a digest function
 *   is applied to it internally.  When finish() is called, the
 *   current value of the digest is written to the output.
 *   No output is ever generated by encode(), or flush().
 *   The digest state is discarded on reset() allowing a new
 *   stream of data to be processed.
 */
#ifndef __WVDIGEST_H
#define __WVDIGEST_H

#include "wvencoder.h"

// internal implementation class do not reference this directly
struct env_md_st;
struct env_md_ctx_st;
class WvEVPMDDigest : public WvEncoder
{
    env_md_st *evpmd;
    env_md_ctx_st *evpctx;
    bool active;

public:
    virtual ~WvEVPMDDigest();

protected:
    WvEVPMDDigest(env_md_st *_evpmd);
    virtual bool _encode(WvBuffer &inbuf, WvBuffer &outbuf,
        bool flush); // consumes input
    virtual bool _finish(WvBuffer &outbuf); // outputs digest
    virtual bool _reset(); // supported: resets digest value

private:
    void cleanup();
};


/**
 * MD5 Digest
 */
class WvMD5Digest : public WvEVPMDDigest
{
public:
    WvMD5Digest();
    virtual ~WvMD5Digest() { }
};


/**
 * SHA-1 Digest
 */
class WvSHA1Digest : public WvEVPMDDigest
{
public:
    WvSHA1Digest();
    virtual ~WvSHA1Digest() { }
};

#if 0
class WvHMACDigest : public WvEncoder
{
public:
    WvHMACDigest();
    virtual ~WvHMACDigest();

protected:
    virtual bool _encode(WvBuffer &inbuf, WvBuffer &outbuf,
        bool flush); // consumes input, on flush outputs digest value
    virtual bool _reset(); // supported: resets digest value
};
#endif

#endif // __WVDIGEST_H
